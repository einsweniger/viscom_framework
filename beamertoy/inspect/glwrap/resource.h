//
// Created by bone on 09.07.18.
//

#pragma once

#include "gl/gl.h"

/**
 * OpenGL Shading Language type tokens, and corresponding shading language keywords declaring each such type.
 * Types whose “Attrib” column is marked may be declared as vertex attributes (see section 11.1.1).
 * Types whose “Xfb” column is marked may be the types of variables returned by transform feedback (see section 11.1.2.1).
 * Types whose “Buffer” column is marked may be declared as buffer variables (see section 7.8).
 * declared in gl4.6 core pg 114 - valid for BUFFER_VARIABLE, PROGRAM_INPUT, PROGRAM_OUTPUT, TRANSFORM_FEEDBACK_VARYING and UNIFORM.
 */
enum resource_type {
    glsl_float                   = GL_FLOAT,
    glsl_vec2                    = GL_FLOAT_VEC2,
    glsl_vec3                    = GL_FLOAT_VEC3,
    glsl_vec4                    = GL_FLOAT_VEC4,
    glsl_double                  = GL_DOUBLE,
    glsl_dvec2                   = GL_DOUBLE_VEC2,
    glsl_dvec3                   = GL_DOUBLE_VEC3,
    glsl_dvec4                   = GL_DOUBLE_VEC4,
    glsl_int                     = GL_INT,
    glsl_ivec2                   = GL_INT_VEC2,
    glsl_ivec3                   = GL_INT_VEC3,
    glsl_ivec4                   = GL_INT_VEC4,
    glsl_uint                    = GL_UNSIGNED_INT,
    glsl_uvec2                   = GL_UNSIGNED_INT_VEC2,
    glsl_uvec3                   = GL_UNSIGNED_INT_VEC3,
    glsl_uvec4                   = GL_UNSIGNED_INT_VEC4,
    glsl_bool                    = GL_BOOL,
    glsl_bvec2                   = GL_BOOL_VEC2,
    glsl_bvec3                   = GL_BOOL_VEC3,
    glsl_bvec4                   = GL_BOOL_VEC4,
    glsl_mat2                    = GL_FLOAT_MAT2,
    glsl_mat3                    = GL_FLOAT_MAT3,
    glsl_mat4                    = GL_FLOAT_MAT4,
    glsl_mat2x3                  = GL_FLOAT_MAT2x3,
    glsl_mat2x4                  = GL_FLOAT_MAT2x4,
    glsl_mat3x2                  = GL_FLOAT_MAT3x2,
    glsl_mat3x4                  = GL_FLOAT_MAT3x4,
    glsl_mat4x2                  = GL_FLOAT_MAT4x2,
    glsl_mat4x3                  = GL_FLOAT_MAT4x3,
    glsl_dmat2                   = GL_DOUBLE_MAT2,
    glsl_dmat3                   = GL_DOUBLE_MAT3,
    glsl_dmat4                   = GL_DOUBLE_MAT4,
    glsl_dmat2x3                 = GL_DOUBLE_MAT2x3,
    glsl_dmat2x4                 = GL_DOUBLE_MAT2x4,
    glsl_dmat3x2                 = GL_DOUBLE_MAT3x2,
    glsl_dmat3x4                 = GL_DOUBLE_MAT3x4,
    glsl_dmat4x2                 = GL_DOUBLE_MAT4x2,
    glsl_dmat4x3                 = GL_DOUBLE_MAT4x3,
    glsl_sampler1D               = GL_SAMPLER_1D,
    glsl_sampler2D               = GL_SAMPLER_2D,
    glsl_sampler3D               = GL_SAMPLER_3D,
    glsl_samplerCube             = GL_SAMPLER_CUBE,
    glsl_sampler1DShadow         = GL_SAMPLER_1D_SHADOW,
    glsl_sampler2DShadow         = GL_SAMPLER_2D_SHADOW,
    glsl_sampler1DArray          = GL_SAMPLER_1D_ARRAY,
    glsl_sampler2DArray          = GL_SAMPLER_2D_ARRAY,
    glsl_samplerCubeArray        = GL_SAMPLER_CUBE_MAP_ARRAY,
    glsl_sampler1DArrayShadow    = GL_SAMPLER_1D_ARRAY_SHADOW,
    glsl_sampler2DArrayShadow    = GL_SAMPLER_2D_ARRAY_SHADOW,
    glsl_sampler2DMS             = GL_SAMPLER_2D_MULTISAMPLE,
    glsl_sampler2DMSArray        = GL_SAMPLER_2D_MULTISAMPLE_ARRAY,
    glsl_samplerCubeShadow       = GL_SAMPLER_CUBE_SHADOW,
    glsl_samplerCubeArrayShadow  = GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW,
    glsl_samplerBuffer           = GL_SAMPLER_BUFFER,
    glsl_sampler2DRect           = GL_SAMPLER_2D_RECT,
    glsl_sampler2DRectShadow     = GL_SAMPLER_2D_RECT_SHADOW,
    glsl_isampler1D              = GL_INT_SAMPLER_1D,
    glsl_isampler2D              = GL_INT_SAMPLER_2D,
    glsl_isampler3D              = GL_INT_SAMPLER_3D,
    glsl_isamplerCube            = GL_INT_SAMPLER_CUBE,
    glsl_isampler1DArray         = GL_INT_SAMPLER_1D_ARRAY,
    glsl_isampler2DArray         = GL_INT_SAMPLER_2D_ARRAY,
    glsl_isamplerCubeArray       = GL_INT_SAMPLER_CUBE_MAP_ARRAY,
    glsl_isampler2DMS            = GL_INT_SAMPLER_2D_MULTISAMPLE,
    glsl_isampler2DMSArray       = GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY,
    glsl_isamplerBuffer          = GL_INT_SAMPLER_BUFFER,
    glsl_isampler2DRect          = GL_INT_SAMPLER_2D_RECT,
    glsl_usampler1D              = GL_UNSIGNED_INT_SAMPLER_1D,
    glsl_usampler2D              = GL_UNSIGNED_INT_SAMPLER_2D,
    glsl_usampler3D              = GL_UNSIGNED_INT_SAMPLER_3D,
    glsl_usamplerCube            = GL_UNSIGNED_INT_SAMPLER_CUBE,
    glsl_usampler1DArray         = GL_UNSIGNED_INT_SAMPLER_1D_ARRAY,
    glsl_usampler2DArray         = GL_UNSIGNED_INT_SAMPLER_2D_ARRAY,
    glsl_usamplerCubeArray       = GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY,
    glsl_usampler2DMS            = GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE,
    glsl_usampler2DMSArray       = GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY,
    glsl_usamplerBuffer          = GL_UNSIGNED_INT_SAMPLER_BUFFER,
    glsl_usampler2DRect          = GL_UNSIGNED_INT_SAMPLER_2D_RECT,
    glsl_image1D                 = GL_IMAGE_1D,
    glsl_image2D                 = GL_IMAGE_2D,
    glsl_image3D                 = GL_IMAGE_3D,
    glsl_image2DRect             = GL_IMAGE_2D_RECT,
    glsl_imageCube               = GL_IMAGE_CUBE,
    glsl_imageBuffer             = GL_IMAGE_BUFFER,
    glsl_image1DArray            = GL_IMAGE_1D_ARRAY,
    glsl_image2DArray            = GL_IMAGE_2D_ARRAY,
    glsl_imageCubeArray          = GL_IMAGE_CUBE_MAP_ARRAY,
    glsl_image2DMS               = GL_IMAGE_2D_MULTISAMPLE,
    glsl_image2DMSArray          = GL_IMAGE_2D_MULTISAMPLE_ARRAY,
    glsl_iimage1D                = GL_INT_IMAGE_1D,
    glsl_iimage2D                = GL_INT_IMAGE_2D,
    glsl_iimage3D                = GL_INT_IMAGE_3D,
    glsl_iimage2DRect            = GL_INT_IMAGE_2D_RECT,
    glsl_iimageCube              = GL_INT_IMAGE_CUBE,
    glsl_iimageBuffer            = GL_INT_IMAGE_BUFFER,
    glsl_iimage1DArray           = GL_INT_IMAGE_1D_ARRAY,
    glsl_iimage2DArray           = GL_INT_IMAGE_2D_ARRAY,
    glsl_iimageCubeArray         = GL_INT_IMAGE_CUBE_MAP_ARRAY,
    glsl_iimage2DMS              = GL_INT_IMAGE_2D_MULTISAMPLE,
    glsl_iimage2DMSArray         = GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY,
    glsl_uimage1D                = GL_UNSIGNED_INT_IMAGE_1D,
    glsl_uimage2D                = GL_UNSIGNED_INT_IMAGE_2D,
    glsl_uimage3D                = GL_UNSIGNED_INT_IMAGE_3D,
    glsl_uimage2DRect            = GL_UNSIGNED_INT_IMAGE_2D_RECT,
    glsl_uimageCube              = GL_UNSIGNED_INT_IMAGE_CUBE,
    glsl_uimageBuffer            = GL_UNSIGNED_INT_IMAGE_BUFFER,
    glsl_uimage1DArray           = GL_UNSIGNED_INT_IMAGE_1D_ARRAY,
    glsl_uimage2DArray           = GL_UNSIGNED_INT_IMAGE_2D_ARRAY,
    glsl_uimageCubeArray         = GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY,
    glsl_uimage2DMS              = GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE,
    glsl_uimage2DMSArray         = GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY,
    glsl_atomic_uint             = GL_UNSIGNED_INT_ATOMIC_COUNTER,
};

constexpr resource_type toType(GLint type) {return static_cast<resource_type>(type);}
size_t getSize(resource_type type);