{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "lsXBRM",
      "date": "1495342282",
      "viewed": 206,
      "name": "Neat Julia",
      "username": "Ebanflo",
      "description": "looks pretty cool",
      "likes": 1,
      "published": 3,
      "flags": 0,
      "tags": [
        "2d",
        "fractal",
        "julia"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "const float pi = 3.1415926535;\nvec2 cSqr(vec2 c){return vec2(c.x * c.x - c.y * c.y, 2. * c.y * c.x);}\nvec2 cMult(vec2 a, vec2 b){return vec2(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);}\nvec2 f(vec2 z){return cSqr(cSqr(cSqr(z)));}\n\nfloat julia(vec2 xy){\n    vec2 z = xy;\n    vec2 c = vec2(-.71, -.49);\n    c += .1 * iMouse.xy / vec2(iResolution.x, 4.0 * iResolution.y);\n    float t = 1.6 + .05 * sin(iTime);\n    c.x += .001 * cos(t);\n    c.y += .001 * sin(t);\n    for(int n = 0; n < 50; n++){\n        z = f(z);\n        z += c;\n        if(dot(z, z) > 16.){\n        \treturn float(n);\n        }\n    }\n    return 50.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = 2. * fragCoord.xy / iResolution.y - vec2(iResolution.x / iResolution.y, 1.);\n    xy *= 1.2;\n    float j = julia(xy);\n    if(j == 50.0) fragColor = vec4(.5 + .5 * cos(iTime/ 2.0 + dot(xy,xy)), \n                                   .5 + .5 * cos(iTime / 2.0 + xy.x),\n                         \t\t.5 + .5 * sin(iTime/ 2.0 + xy.y), 1.0);\n    else fragColor = vec4(0.0);\n}",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}