{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "4dXyW4",
      "date": "1488127326",
      "viewed": 196,
      "name": "warp for imp",
      "username": "blew_zc",
      "description": "warp",
      "likes": 1,
      "published": 3,
      "flags": 0,
      "tags": [
        "warp"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 4,
            "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg",
            "ctype": "texture",
            "channel": 0,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "const vec2 center = vec2(0.0);\nconst float radius = 0.5;\nconst float warpCoeff = 8.0;\nconst float moveCoeff = 0.1;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 grad = vec4(dFdx(uv), dFdy(uv));\n    vec2 centeredUV = uv * 2.0 - 1.0;\n    vec2 v = centeredUV - center;\n    float phi = atan(v.y, v.x);\n    float len = length(v);\n    float d = max(radius-length(v), 0.0);\n    float rho = phi + d * warpCoeff;\n    vec2 uvWarp = vec2(cos(rho), sin(rho)) * len * 0.5 + 0.5;\n    uv = len<radius ? uvWarp : uv;\n\tuv.x = fract(iTime*moveCoeff+uv.x);\n    vec4 col = texture(iChannel0, uv);\n\tfragColor = col;\n}\n",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}