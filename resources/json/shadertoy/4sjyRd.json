{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "4sjyRd",
      "date": "1493383728",
      "viewed": 327,
      "name": "Equirectangular projection,tweet",
      "username": "Zabidon",
      "description": "It is a tweet shader of Equirectangular projection.\n",
      "likes": 1,
      "published": 3,
      "flags": 0,
      "tags": [
        "cubemap",
        "tweet",
        "equirectangular"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 22,
            "src": "/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg",
            "ctype": "cubemap",
            "channel": 0,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "false",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "// License: Do What The F**k You Want To But It's Not My Fault Public License v1 (WTFNMFPL-1.0)\n// Created by Osipov Kirill --- zabidon\n\n// 137 char\n// tan(o.y /= 2.) --- can cause problems on some OS.\nvoid mainImage( out vec4 o, in vec2 u )\n{\n\to.xy = (u / iResolution.xy - .5) * 6.28;\n\to = texture(iChannel0, vec3(cos(o.x), tan(o.y /= 2.), sin(o.x)) * cos(o.y));\n}\n\n// 140 char. It should work everywhere, but 6.3 is a bad approximation of 2*PI.\n/*\nvoid mainImage( out vec4 o, in vec2 u )\n{\n\to.xy = (u / iResolution.xy - .5) * 6.3;\n    o.y /= 2.;\n\to = texture(iChannel0, vec3(cos(o.x), tan(o.y), sin(o.x)) * cos(o.y));\n}\n*/",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}