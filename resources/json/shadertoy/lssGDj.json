{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "lssGDj",
      "date": "1379886198",
      "viewed": 7931,
      "name": "Ascii Art",
      "username": "movAX13h",
      "description": "basic bitmap to (mouse clicked ? grayscale : color) ascii (8 characters) art shader",
      "likes": 88,
      "published": 3,
      "flags": 0,
      "tags": [
        "mouse",
        "ascii"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 12,
            "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm",
            "ctype": "video",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [],
        "code": "// Bitmap to ASCII (not really) fragment shader by movAX13h, September 2013\n// This is the original shader that is now used in PixiJs ans various other products.\n\n// Here's a little tool for new characters: thrill-project.com/archiv/coding/bitmap/\n\nfloat character(float n, vec2 p)\n{\n\tp = floor(p*vec2(4.0, -4.0) + 2.5);\n\tif (clamp(p.x, 0.0, 4.0) == p.x && clamp(p.y, 0.0, 4.0) == p.y)\n\t{\n\t\tif (int(mod(n/exp2(p.x + 5.0*p.y), 2.0)) == 1) return 1.0;\n\t}\t\n\treturn 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy;\n\tvec3 col = texture(iChannel0, floor(uv/8.0)*8.0/iResolution.xy).rgb;\t\n\t\n\tfloat gray = 0.3 * col.r + 0.59 * col.g + 0.11 * col.b;\n\t\n\tfloat n =  4096.0;             // .\n\tif (gray > 0.2) n = 65600.0;    // :\n\tif (gray > 0.3) n = 332772.0;   // *\n\tif (gray > 0.4) n = 15255086.0; // o \n\tif (gray > 0.5) n = 23385164.0; // &\n\tif (gray > 0.6) n = 15252014.0; // 8\n\tif (gray > 0.7) n = 13199452.0; // @\n\tif (gray > 0.8) n = 11512810.0; // #\n\t\n\tvec2 p = mod(uv/4.0, 2.0) - vec2(1.0);\n\tif (iMouse.z > 0.5)\tcol = gray*vec3(character(n, p));\n\telse col = col*character(n, p);\n\t\n\tfragColor = vec4(col, 1.0);\n}",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}