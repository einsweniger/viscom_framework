{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "4tlGD2",
      "date": "1425295388",
      "viewed": 1268,
      "name": "Simple Kaleidoscope 3",
      "username": "TekF",
      "description": "Messing with some more parameters of this. I like the way it explodes after a few seconds.",
      "likes": 11,
      "published": 3,
      "flags": 0,
      "tags": [
        "kaleidoscope"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 4,
            "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg",
            "ctype": "texture",
            "channel": 0,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "false",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "const float tau = 6.2831853;\n\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float T = iTime*.3+10.0;\n\tvec2 uv = (fragCoord.xy-.5*iResolution.xy) * 7.2 / iResolution.y;\n\n    float r = 1.0;\n    float a = T*.1;\n    float c = cos(a)*r;\n    float s = sin(a)*r;\n    float q = T*.2 / tau;\n    for ( int i=0; i<30; i++ )\n    {\n    \t//uv = abs(uv);\n        \n        // higher period symmetry\n        float t = atan(uv.x,uv.y);\n\t\tt *= q;\n        t = abs(fract(t*.5+.5)*2.0-1.0);\n        t /= q;\n        //q = q+.001;\n        uv = length(uv)*vec2(sin(t),cos(t));\n        \n        uv -= .7;\n        uv = uv*c + s*uv.yx*vec2(1,-1);\n    }\n        \n    fragColor = .5+.5*sin(T+vec4(13,17,23,1)*texture( iChannel0, uv*vec2(1,-1)+.5, -0.0 ));\n}\n",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}