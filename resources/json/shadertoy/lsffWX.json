{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "lsffWX",
      "date": "1499311179",
      "viewed": 197,
      "name": "Chroma Beats",
      "username": "StanRee",
      "description": "Featuring beats by SWEEDIN:\nhttps://soundcloud.com/sethweedin\n\nInspired by:\nhttps://assets.razerzone.com/eedownloads/desktop-wallpapers/RazerChroma_1920x1080.png\n\nDon't look at the code, its a mess <3",
      "likes": 2,
      "published": 3,
      "flags": 96,
      "tags": [
        "music",
        "audio",
        "visualizer",
        "soundcloud",
        "buffers",
        "razer"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 48,
            "src": "/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg",
            "ctype": "texture",
            "channel": 0,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          },
          {
            "id": 257,
            "src": "/media/previz/buffer00.png",
            "ctype": "buffer",
            "channel": 3,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          },
          {
            "id": 258,
            "src": "/media/previz/buffer01.png",
            "ctype": "buffer",
            "channel": 1,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "\nvec3 HUEtoRGB(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{float t = iTime * 10.; \n    \n float st = sin(t) *.5 + .5; \n \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n vec2 l = fragCoord;\n \n \n    vec3 h = HUEtoRGB(vec3(uv.x*.92, 1.0, 1.0)); \n    vec3 hh = h; \n   // h *= clamp((mod(uv.x*149.001 , 2.)-1.7)*100. , 0., 1.); \n//  h = vec3(1.0); \n   float ll = (1.0 - mod(l.x * 1., 10.)) * 1000000.;\n ll = clamp(ll, 0., 1.); \n// ll = 1.;\n// h = vec3(1.0); \nh = h *ll; \n    \n    float f = texture(iChannel1, vec2(uv.x*.5 + .2, .15)).r;\n float ft = f; \n \tif((uv.y * (abs(uv.x-.5)+.9))>f)\n        f = 0.;\n \tfloat fff = clamp(f *100., 0., 1.0);\nfloat f2 = 0.;\n const int amt = 50;\n int x ; \n for(x = 0; x < amt; x++)\n { float uC = uv.x*.5 + .15 * ((float(x) - float(amt)*.5)/(float(amt)*.5));\n     f2 += texture(iChannel1, vec2(uC*.5 + .2, 0.)).r *1. ;}\n f2/=float(amt); \n vec3 grad; vec3 rade = hh * (f2 - (1.0-(1.0-uv.y))+.05);// * (1.0 - uv.y)* .25; \n rade = clamp(rade, 0.,1.); \n vec3 invh = (hh * uv.y -.5) * .8; \n invh = clamp(invh *ll, 0., 1.0);\n \n vec3 hmm =  h * uv.y* .25;\n vec3 rubyr = texture(iChannel3, uv).rgb; ;\n     vec3 ruby = vec3(rubyr.x + rubyr.y); \n vec3 lines = hh* (ruby); \n lines = clamp(lines, 0., 1.); \n grad= clamp(lines, 0., 1.);\n\tfragColor = vec4(lines + hmm + grad + invh + rade ,1.0);\n  \n//fragColor = vec4(hmm+  lines + grad, 1.0); \n\t//fragColor.xyz = vec3(ruby);\n \n}",
        "name": "Image",
        "description": "",
        "type": "image"
      },
      {
        "inputs": [
          {
            "id": 48,
            "src": "/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg",
            "ctype": "texture",
            "channel": 2,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          },
          {
            "id": 257,
            "src": "/media/previz/buffer00.png",
            "ctype": "buffer",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          },
          {
            "id": 258,
            "src": "/media/previz/buffer01.png",
            "ctype": "buffer",
            "channel": 1,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 257,
            "channel": 0
          }
        ],
        "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        \n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n vec2 l = fragCoord;\n \n \n   // vec3 h = HUEtoRGB(vec3(uv.x*.92, 1.0, 1.0)); \n //   vec3 hh = vec3(1.0); \n //   h *= clamp((mod(uv.x*149.001 , 2.)-1.7)*100. , 0., 1.); \n//  h = vec3(1.0);\n    float ll; \n    \n   // ll = clamp(ll, 0., 1.);\n    ll= abs(fract(l.x *.1) - .5)* 2.0;\n     ll = clamp(ll, 0., 1.); \n    float bb = clamp((1.0- mod(l.x * 1., 10.)) * 2.51, 0. , 1.);\n   //ll \n ll = clamp(ll, 0., 1.); \n// ll = 1.;\n// h = vec3(1.0); \n//h = h *ll; \n    \n    float f = texture(iChannel1, vec2(uv.x*.5 + .2, .15)).r;\n float ft = f; \n    float uvy  = (uv.y * (abs(uv.x-.5)+.9));\n \tif(uvy>f)\n        f = 0.;\n    \n \tfloat fff = clamp(1.0-uvy/f, 0., 1.0);\n    float hard = clamp(f*10., 0., 1.0);\n   // if((uv.y * (abs(uv.x-.5)+.9)) < f * .5)\n   //     fff += bb; \n//float f2 = 0.;\n// const int amt = 50;\n //int x ; \n //for(x = 0; x < amt; x++)\n //{ float uC = uv.x*.5 + .15 * ((float(x) - float(amt)*.5)/(float(amt)*.5));\n//     f2 += texture(iChannel1, vec2(uC*.5 + .2, 0.)).r *1. ;}\n //f2/=float(amt); \n //vec3 grad = hh * (f2 - uv.y+.05);// * (1.0 - uv.y)* .25; \n //vec3 invh = (hh * uv.y -.5) * .8; \n //invh = clamp(invh *ll, 0., 1.0);\n \n //vec3 hmm =  h * uv.y* .25;\n vec3 lines = vec3(bb * hard);\n    \n    vec3 ff = texture(iChannel0, uv).xyz;\n    if(lines.x > ff.x){\n        \n        ff.x = lines.x;\n         \n   \n     ff.x =lines.x;\n          \n    }\n    else\n        ff.x -=0.0614; \n    //ff.x*=0.;\n    \n   //if(ff.x < .955)\n     //   ff-=1.; \n       // ff *= 0.; \n    \n    vec3 glow = vec3(1.) *ll * fff;\n    fragColor = vec4(lines*0.0 + glow,1.0);\n    \n //  vec3 lines = texture(iChannel0, uv).xyz;\n    \n    \n   // vec3 glow = vec3(1.) *ll * fff;\n    float t =iTime;\n    vec3 tex = texture(iChannel2, uv * vec2(4.,.25)+ vec2(0.,-t*.1)).xxx ;\n    vec3 tex2 = texture(iChannel2, uv * vec2(4.,.25)+ vec2(0.,t*.0525)).xxx ;\n\n    tex *= tex2; \n    vec3 rang = glow *1.03*01. -tex;    \n   // vec3 hmm =  hard * uv.y* .25;\n     fragColor = vec4(clamp(rang, 0., 1.)*.25 + lines,1.0);\n  //  fragColor = vec4(vec3(clamp(ff.x,0.,1.), clamp(rang.x,0.,1.), 1.), 1.0); \n}",
        "name": "Buf A",
        "description": "",
        "type": "buffer"
      },
      {
        "inputs": [
          {
            "id": 10940,
            "src": "https://soundcloud.com/sethweedin/reboot",
            "ctype": "musicstream",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 0
          }
        ],
        "outputs": [
          {
            "id": 258,
            "channel": 0
          }
        ],
        "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 f = texture(iChannel0, uv).xyz -.01;\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n    fragColor.rgb = f; \n}",
        "name": "Buf B",
        "description": "",
        "type": "buffer"
      }
    ]
  }
}