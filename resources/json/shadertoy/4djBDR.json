{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "4djBDR",
      "date": "1500056489",
      "viewed": 536,
      "name": "[SH17A] Particles 4",
      "username": "aiekick",
      "description": "[SH17A] Particles 4",
      "likes": 15,
      "published": 3,
      "flags": 32,
      "tags": [
        "particles",
        "sh17a"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 257,
            "src": "/media/previz/buffer00.png",
            "ctype": "buffer",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "void mainImage( out vec4 f, vec2 g )\n{\n\tf = texelFetch(iChannel0, ivec2(g),0); // thanks to dave hoskins\n}",
        "name": "Image",
        "description": "",
        "type": "image"
      },
      {
        "inputs": [
          {
            "id": 257,
            "src": "/media/previz/buffer00.png",
            "ctype": "buffer",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 257,
            "channel": 0
          }
        ],
        "code": "void mainImage( out vec4 f, vec2 g )\n{\n    f.xyz = iResolution;\n    vec2 v = (g+g-f.xy)/f.y*3.;\n    f *= texture(iChannel0, g/f.xy) / length(f);\n    g = vec2(iFrame + 2, iFrame);\n    g = v - sin(g) * fract(iTime*.1 + 4.*sin(g))*3.;\n    f += .1 / max(abs(g.x), g.y);\n}",
        "name": "Buf A",
        "description": "",
        "type": "buffer"
      }
    ]
  }
}