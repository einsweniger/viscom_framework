{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "4s3fz7",
      "date": "1524427131",
      "viewed": 82,
      "name": "Disco Amoeba",
      "username": "MadEqua",
      "description": "Learning to create noise effects.",
      "likes": 0,
      "published": 3,
      "flags": 0,
      "tags": [
        "noise",
        "colorful",
        "random",
        "trippy"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "const float PI = 3.141519;\nconst float TWO_PI = PI * 2.0;\n\nfloat rand(float v) \n{\n    return fract(sin(v) * 7539.0);\n}\n\nfloat noise(float v)\n{\n    float i = floor(v);\n    float f = fract(v);\n    return mix(rand(i), rand(i + 1.0), smoothstep(0.0, 1.0, f));\n}\n\n//Assuming v -> [0, maxV]\nfloat noiseCircular(float v, float maxV)\n{\n    float i = floor(v);\n    float f = fract(v);\n        \n    float nextI = mod(i + 1.0, ceil(maxV));\n    return mix(rand(i), rand(nextI), smoothstep(0.0, 1.0, f));\n}\n\nvec2 rotate2D(float angle, vec2 uv, vec2 pivot)\n{\n    vec2 newUv = uv - pivot;\n\n    newUv = mat2(cos(angle), -sin(angle), \n                sin(angle), cos(angle)) * newUv;\n    return newUv + pivot;\n}\n\n//Animated Amoeba-like shape\nfloat shape(vec2 uv, vec2 center, float r, float smoothR, int bumps, float time)\n{\n    vec2 v = uv - center;\n    float l = length(v);\n    float a = atan(v.y, v.x) + PI;\n    \n    float ampAnim = noise(time + 0.514) * 0.35;\n    \n    float distortion = ampAnim * noiseCircular(a * float(bumps) / TWO_PI, float(bumps));\n    return 1.0 - smoothstep(r - smoothR, r , l + distortion);\n}\n\nfloat time(float mult, float sum)\n{\n    return iTime * mult + sum;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    uv.x *= ratio;\n    \n    vec2 CENTER = vec2(0.5 * ratio, 0.5);\n    vec2 mirrorUv = uv - CENTER; \n   \n    float t = time(1.3, 423.0);\n    float shapeSmooth = abs(sin(t * 6.0) * sin(t)) * 0.3;\n    \n    vec2 rotMirrorUv = rotate2D(noise(time(0.2, 432.65)) * TWO_PI, mirrorUv, vec2(0.0));\n    float s1 = shape(abs(rotMirrorUv), CENTER, 0.75, shapeSmooth, 20, time(1.3, 23.21));\n    \n    rotMirrorUv = rotate2D(noise(time(0.25, 34.45)) * TWO_PI, mirrorUv, vec2(0.0));\n    float s2 = shape(abs(rotMirrorUv), CENTER - vec2(0.0, 0.5), 0.4, shapeSmooth, 15, time(1.4, 52.52));\n    \n    rotMirrorUv = rotate2D(noise(time(0.22, 765.92)) * TWO_PI, mirrorUv, vec2(0.0));\n    float s3 = shape(abs(rotMirrorUv), CENTER, 0.55, shapeSmooth, 10, time(1.5, 145.52));\n      \n    vec3 col = vec3(0.0);\n    \n    col.r = mix(s1 - s2, (1.0 - s1) + s2, noise(time(1.9, 3453.5)));\n    col.b = mix(s2 - s1, (1.0 - s2) + s1, noise(time(1.7, 213.5)));\n    col.g = smoothstep(0.3, 0.7, col.r * col.b);   \n    \n    col *= 1.6 * mix(s3, 1.0 - s3, noise(time(1.58, 45.5)));\n    \n    fragColor = vec4(col, 1.0);\n}",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}