{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "Xts3D7",
      "date": "1422569927",
      "viewed": 1389,
      "name": "[2TC 15] Warp Tunnel",
      "username": "coyote",
      "description": " ",
      "likes": 13,
      "published": 3,
      "flags": 0,
      "tags": [
        "2d",
        "2tweets",
        "short"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 4,
            "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg",
            "ctype": "texture",
            "channel": 0,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "false",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "//264 back to for\n//265 -s*2. -> -s-s\n//266 iGlobalTime -> iTime\n//272 chars by using while instead of for (WebGL 2.0)\nvoid mainImage( out vec4 o, vec2 i )\n{\n    o = iResolution.xyzz;\n    vec4 p = ((i+i).xyxy-o)/o.y;\n    o-=o;\n\n    for( float t=iTime*.1,\n               s=sin(t), c=cos(t),\n               e=atan(p.y,p.z=p.x*c-s)/1.57,\n               d=(p.x*s+c)/length(p.yz),\n               j=0.;\n         \n         j++<20.;\n         \n         o+=(p=texture( iChannel0, vec2(e-s-s, d+t*15.) ))\n            *p.b*.17/abs(d*=.97+.03*c)\n    );\n\n}\n\n//276 chars, adapted for the new interface\n/*\nvoid mainImage( out vec4 o, vec2 i )\n{         \n    o = iResolution.xyzz;\n    vec4 p = ((i+i).xyxy-o)/o.y;\n    o-=o;\n\n    float t=iTime*.1,\n          s=sin(t), c=cos(t),\n          e=atan(p.y,p.z=p.x*c-s)/1.57,\n          d=(p.x*s+c)/length(p.yz);\n\n    for(int i=0;i<20;i++)\n        o+=(p=texture( iChannel0, vec2(e-s*2., d+t*15.) ))\n           *p.b*.17/abs(d*=.97+.03*c);\n\n}/**/\n\n\n//original in 276 chars\n/*\nvoid main()\n{         \n    vec4 R = iResolution.xyzz,\n         p = (2.*gl_FragCoord-R)/R.y;\n    R-=R;\n\n    float t=iTime*.1,\n          s=sin(t), c=cos(t),\n          e=atan(p.y,p.z=p.x*c-s)/1.57,\n          d=(p.x*s+c)/length(p.yz);\n\n    for(int i=0;i<20;i++)\n        R+=(p=texture( iChannel0, vec2(e-s*2., d+t*15.) ))\n           *p.b*abs(.17/(d*=.97+.03*c));\n\n    gl_FragColor=R;\n\n}\n*/",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}