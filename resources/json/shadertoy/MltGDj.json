{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "MltGDj",
      "date": "1471788472",
      "viewed": 247,
      "name": "WHY",
      "username": "Imsure1200q_1UWE130",
      "description": "just why",
      "likes": 1,
      "published": 3,
      "flags": 0,
      "tags": [
        "why"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 3,
            "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg",
            "ctype": "texture",
            "channel": 2,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          },
          {
            "id": 6,
            "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg",
            "ctype": "texture",
            "channel": 0,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          },
          {
            "id": 8,
            "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg",
            "ctype": "texture",
            "channel": 1,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "vec3 doTunnel( sampler2D sampler, in vec2 uv, in float time ) \n{\n    // get polar coordinates    \n    float a = atan( uv.y, uv.x );\n    float b = atan( uv.y, abs(uv.x) );\n    float r = length( uv );\n    \n    // pack and animate    \n    vec2 uvL = vec2( 1.0/r + time, a/3.14159265359 );\n    vec2 uvR = vec2( 1.0/r + time, b/3.14159265359 );\n\n    // fetch from texture    \n    return vec4(texture( sampler, uvL ) + vec4(vec2(dFdx(uvR)), vec2(dFdy(uvR)))).xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    vec3 col = doTunnel( iChannel0, uv, iTime ) + doTunnel( iChannel1, uv/2.0, -iTime) + doTunnel(iChannel2, uv, sqrt(iTime));\n\tfragColor = vec4(col,1.0);\n}",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}