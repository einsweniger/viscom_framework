{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "XtXSDX",
      "date": "1440011547",
      "viewed": 1145,
      "name": "DF VCR Distortion",
      "username": "demofox",
      "description": "Dont leave it on pause too long!",
      "likes": 6,
      "published": 3,
      "flags": 0,
      "tags": [
        "2d",
        "vcr"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 5,
            "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg",
            "ctype": "texture",
            "channel": 0,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "false",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [],
        "code": "float c_textureSize = 512.0;\nfloat c_pixelSize = (1.0 / c_textureSize);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * vec2(1,-1);   \n    vec2 offset = vec2(\n        (sin(iTime*100.0) * 0.5 + 0.5) * c_pixelSize*25.0,\n        0.0\n\t);\n    \n    vec3 a = texture(iChannel0, uv).rgb;\n    vec3 b = vec3(\n        texture(iChannel0, uv + offset.xy).r,\n        texture(iChannel0, uv + offset.yx).g,\n        texture(iChannel0, uv + vec2(offset.y, -offset.x)).b            \n    );\n    \n    a = a * 2.0 - 1.0;\n    b = b * 2.0 - 1.0;\n    vec3 color = a + b;\n    color = color * 0.5 + 0.5;\n\tfragColor = vec4(clamp(color, 0.0, 1.0), 1.0);\n}\n",
        "name": "",
        "description": "",
        "type": "image"
      }
    ]
  }
}