{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "4ssfzM",
      "date": "1495391559",
      "viewed": 232,
      "name": "music visualiser",
      "username": "Nitato_",
      "description": "(^-^)",
      "likes": 2,
      "published": 3,
      "flags": 96,
      "tags": [
        "2d",
        "music",
        "visualizer",
        "visualiser"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 257,
            "src": "/media/previz/buffer00.png",
            "ctype": "buffer",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "vec2 snap(vec2 v, vec2 s) {\n\treturn floor(v*s)/s;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord / iResolution.xy;\n    float fft= texture(iChannel0, uv).a;\n    float intensity = 4.*fft;\n    vec2 m = vec2(0.01, 0.5);\n    vec2 snappedCoord = snap(uv, m.y*vec2(200.)*sin(uv.x*m.x*100.0)*sin(uv.y*m.y*100.)*intensity);\n\tvec4 sc = texture(iChannel0, snappedCoord);    \n    vec4 c = texture(iChannel0, uv);\n    fragColor = sc;\n}\n    \n        ",
        "name": "Image",
        "description": "",
        "type": "image"
      },
      {
        "inputs": [
          {
            "id": 9000,
            "src": "https://soundcloud.com/megadrivemusic/night-prowl",
            "ctype": "musicstream",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 0
          }
        ],
        "outputs": [
          {
            "id": 257,
            "channel": 0
          }
        ],
        "code": "#define PI 3.14159265359\n#define TAU 6.28318530718\nfloat asFilled(float d) {\n\treturn (1. - smoothstep(0.,.01,d));\n} \nfloat oEye(vec2 xy, float radius, float audioRange, float slices) {   \n    float freqRange = .5;\n\tfloat angle = atan(xy.x, xy.y) / TAU + 0.5; \n    angle = floor(angle * slices);\n    angle *= freqRange;\n    angle = mod(angle*7919.,slices)/slices;\n    float audioLevel = texture(iChannel0, vec2(angle,.25)).x;\n\treturn length(xy)-(radius + audioLevel * audioRange);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 aspect = vec2(iResolution.x/iResolution.y, 1.0);\n\tvec2 xy = (fragCoord.xy / iResolution.xy*2.0 - vec2(1.)) * aspect;\n    vec2 bassSoundPixel = vec2(1,0);\n    float amp1 = texture(iChannel0, (bassSoundPixel+0.5)/iChannelResolution[0].xy).x;\n    float dE1 = oEye(xy, 0.5, 0.5, 50.);\n    vec3 colE1 = mix(vec3(1,0.,0.), vec3(0., 1., 0.), 1.+dE1);\n    float dE2 = oEye(xy, 0.5, 0.5, 100.);\n    vec3 colE2 = mix(vec3(1,0.,0.), vec3(0., 0., 1.), 1.+dE2);\n\tfragColor =  vec4(colE1 + colE2, amp1) * asFilled(dE1); // vec4(color,amp1);\n}",
        "name": "Buf A",
        "description": "",
        "type": "buffer"
      }
    ]
  }
}