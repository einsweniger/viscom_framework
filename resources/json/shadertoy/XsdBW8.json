{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "XsdBW8",
      "date": "1524902056",
      "viewed": 8,
      "name": "helix 1",
      "username": "FabriceNeyret2",
      "description": ".",
      "likes": 1,
      "published": 3,
      "flags": 0,
      "tags": [
        "raymarching",
        "sdf",
        "spiral",
        "helix",
        "short",
        "origami",
        "helicoid"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "// variant of https://www.shadertoy.com/view/4dtfWr\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime;\n    mat2  R = mat2( sin(t+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),    // ray direction\n          p = 30./q;                          // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 )\n        q = p,\n        q.xz *= R, q.yz *= R,                 // rotation\n        t = max(abs(q.z)-6.,length(q.xy)-4.), // bounding cylinder\n        t = max(t, abs(sin(atan(q.y,q.x)-q.z)*min(1.,length(q.xy))) - .1 ), // helix\n        p += t*D;                             // step forward = dist to obj\n}\n",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}