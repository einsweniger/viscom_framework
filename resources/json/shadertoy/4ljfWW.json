{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "4ljfWW",
      "date": "1515799786",
      "viewed": 413,
      "name": "On stage",
      "username": "ocb",
      "description": "Playing with textures and lights",
      "likes": 20,
      "published": 3,
      "flags": 32,
      "tags": [
        "ray",
        "grid",
        "lights"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 257,
            "src": "/media/previz/buffer00.png",
            "ctype": "buffer",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "// Author: ocb\n// Title: On stage\n\n/* \tPlaying with grid over texture in buffer A\n\tAdding lights rays in Main Image\n*/\n\nfloat H2 (in vec2 st) { \t\t\t\t\t\t\n    return fract(sin(dot(st,vec2(12.9898,8.233))) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec3  col = texture(iChannel0, uv).rgb;\n    vec2 light = vec2(sin(iTime*.1)+1.5,cos(iTime*.07)+1.5);\n    vec2  d = (.3*light-uv)/64.;\n    float w = .05;\n    vec2  s = uv+d*H2(uv);\n    for( int i=0; i<64; i++ )\n    {\n        col += w*texture(iChannel0, s).rgb;\n        w *= .95;\n        s += d;\n    }\n    \n\tfragColor = vec4( col, 1.0 );\n} ",
        "name": "Image",
        "description": "",
        "type": "image"
      },
      {
        "inputs": [
          {
            "id": 13,
            "src": "/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3",
            "ctype": "music",
            "channel": 1,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          },
          {
            "id": 16,
            "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png",
            "ctype": "texture",
            "channel": 0,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 257,
            "channel": 0
          }
        ],
        "code": "#define I_LIKE_MUSIC\n\n#define T(x) texture(iChannel0,x)\n\nvec2 grid(in vec2 uv, in float x){ uv *= x; return uv - .5*sin(uv);}\nvec2 edge(in vec2 x){ return abs(fract(x)-.5);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float amp = 0.;\n    #ifdef I_LIKE_MUSIC\n    amp = .6 - texelFetch(iChannel1,ivec2(20,0),0).x + .5*texelFetch(iChannel1,ivec2(400,0),0).x;\n    #endif\n\n    float t=iTime*.005;\n    \n    vec2 a = grid(uv,10.), b = grid(uv,25.), c = grid(uv,50.);\n    vec2 p = floor(a)/10.+t, q = floor(b)/25.+.7*t, s = floor(c)/50.+1.3*t;\n    \n    vec2 bp = ( edge(a) + edge(b) + edge(c) )/1.5;\n    bp*=bp*bp;\n    \n    vec4 tex = .8*T(p)+.6*T(q)+.4*T(s); \n    tex -= .2*(bp.x+bp.y);\n    tex *= 2.*smoothstep(1.+amp,1.8,tex.r)*tex;\n\n\tfragColor = tex;\n} \n\n",
        "name": "Buf A",
        "description": "",
        "type": "buffer"
      }
    ]
  }
}