{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "4sVXW3",
      "date": "1467071060",
      "viewed": 445,
      "name": "Smallest Mandelbrot-85 chars",
      "username": "GregRostami",
      "description": "This is a simplification of my previous shader: [url]https://www.shadertoy.com/view/Mdy3Dw[/url]\nI wanted to make the SMALLEST Mandelbrot ... can you make it smaller?  :)",
      "likes": 5,
      "published": 3,
      "flags": 0,
      "tags": [
        "2d",
        "short",
        "tweet",
        "2tc"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "#define mainImage(o,u)\t\\\no-=o;\t\\\nwhile(o.a++<97.)o.rg=u/iResolution.y-mat2(-o.g,o.rrg)*o.gr\t\n\n// 103 chars - I was schooled by akohdr, who reduced the matrix by 3 chars!!\n/**\nvoid mainImage(out vec4 o,vec2 u) \n{\n    o-=o;\n    for (int i=0; i++ < 97;) \n       o.rg = u/iResolution.y - mat2(-o.g,o.rrg)*o.gr;\n}\n/**/\n\n// 107 chars - Original shader\n/**\nvoid mainImage(out vec4 o,vec2 u) \n{\n    o-=o;\n    for (int i=0; i < 97; i++) \n       o.rg = u/iResolution.y - mat2(o.rg,-o.g,o.r)*o.rg;\n}\n/**/",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}