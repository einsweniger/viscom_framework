{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "MsXBRX",
      "date": "1497153474",
      "viewed": 359,
      "name": "Shallow river",
      "username": "Txoka",
      "description": "small river",
      "likes": 9,
      "published": 3,
      "flags": 0,
      "tags": [
        "water",
        "rocks",
        "river",
        "shallow",
        "rio",
        "rocas"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 4,
            "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg",
            "ctype": "texture",
            "channel": 1,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          },
          {
            "id": 7,
            "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg",
            "ctype": "texture",
            "channel": 2,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          },
          {
            "id": 8,
            "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg",
            "ctype": "texture",
            "channel": 0,
            "sampler": {
              "filter": "mipmap",
              "wrap": "repeat",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "const float width = 0.37;\nconst float height = 1.;\n\nvec2 B(vec2 uv) {\n\tvec2 uv1= vec2(uv.x-iTime,uv.y-iTime/2.);\n\tvec3 rain=texture(iChannel0,uv1).rgb/8.;\n    vec2 uv2 = uv.xy-rain.xy/4.;\n    uv2.x-=iTime/2.;\n    uv2.y-=iTime/5.;\n    return texture(iChannel0,uv2).xy;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uv_=uv;\n    vec4 fuera = texture(iChannel2,uv);\n    vec2 uve=uv.xy-B(uv);\n    vec2 uvmd = uve+sin(uv_.y*uv_.y/10.+1.)*1.03*B(uv_);\n    vec4 centro =texture(iChannel2,uvmd);\n\tvec4 fondo = texture(iChannel1,uv-B(uv));\n\n\tuv = vec2(0.5, 0.5) - uvmd;\n    uv.x *= iResolution.x / iResolution.y; \n    float hypot = sqrt(uv.x * uv.x + uv.y * uv.y);\n    float uvang = atan(uv.y, uv.x);\n    vec2 rot = vec2(hypot * cos(uvang+1.4), hypot * sin(uvang+0.1));\n    if(rot.x <= width && rot.x >= -width && rot.y <= height && rot.y >= -height){\n    \tfragColor = fondo;\n    }else if(rot.x-0.1 <= width && rot.x+0.1 >= -width && rot.y <= height && rot.y >= -height) {\n        fragColor = centro;\n    } else {\n    \tfragColor=fuera;\n    }\n}",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}