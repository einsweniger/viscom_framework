{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "XdXBzf",
      "date": "1497141136",
      "viewed": 194,
      "name": "Colorize Posterize",
      "username": "cacheflowe",
      "description": "Colorize a texture with optional posterize effect",
      "likes": 1,
      "published": 3,
      "flags": 0,
      "tags": [
        "colorize"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 12,
            "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm",
            "ctype": "video",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "float posterSteps = 16.0;\nvec3 color1 = vec3(1.0, 1., 0.);\nvec3 color2 = vec3(1., 0., 1.);\n\nfloat rgbToGray(vec4 rgba) {\n\tconst vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    return dot(rgba.xyz, W);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // current location\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // sample color to grayscale\n    vec4 color = texture(iChannel0, uv);\n    float luma = rgbToGray(color);\n    luma = floor(luma * posterSteps) / posterSteps;\t// posterize    \n    \n    // fade from black at 0.5 to full color at 0 & 1\n    if(luma < 0.5) {\n        fragColor = vec4(color2 * (1. - luma * 2.), 1.);\n    } else {\n        fragColor = vec4(color1 * (-0.5 + luma * 2.), 1.0);\n    }\n}\n\n/*\n#define targetR 1.0\n#define targetG 0.0\n#define targetB 1.0\n#define posterSteps 6.0\n\nfloat rgbToGray(vec4 rgba) {\n\tconst vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    return dot(rgba.xyz, W);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // current location\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // sample color color\n    vec4 color = texture(iChannel0, uv);\n    float luma = rgbToGray(color);\n    \n    #ifdef posterSteps\n    \tluma = floor(luma * posterSteps) / posterSteps;\n    #endif\n    \n    // draw input color mapped to luma\n\tfragColor = vec4(vec3(luma * targetR, luma * targetG, luma * targetB), 1.0);\n}\n*/",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}