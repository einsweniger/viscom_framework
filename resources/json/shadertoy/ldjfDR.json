{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "ldjfDR",
      "date": "1500127381",
      "viewed": 486,
      "name": "[SH17A]  Do you like Lenna?",
      "username": "Zabidon",
      "description": "I tried many different solutions to find way of rendering photo using only 2-tweet.\nMay be later I write more details about it.\n\nIf you have a slow device and you see black vertical lines just replace 3e-3 by 5e-3 or other bigger value in  Buf A",
      "likes": 13,
      "published": 3,
      "flags": 96,
      "tags": [
        "2d",
        "fft",
        "photo",
        "lenna",
        "sh17a"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 257,
            "src": "/media/previz/buffer00.png",
            "ctype": "buffer",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "// License: Do What The F**k You Want To But It's Not My Fault Public License v1 (WTFNMFPL-1.0)\n// Created by Osipov Kirill --- zabidon, KirillD503\n\n\n// If it does not work for you plz write to me about your system.\n\n// TURN OFF THE SPEAKERS!!!!!!!!\n\n// PLZ Wait 40 sec and you see a RGB photo of Lenna\n\n// May be later I implement instant rendering.\n\n// UPD: Imp5 published a similar shader.\n// Plz pay attention on his solution https://www.shadertoy.com/view/Ms2fDR\n\n#define mainImage(O, U) O=texelFetch(iChannel0, ivec2(U), 0);\n\n/*\nvoid mainImage(out vec4 O, vec2 U) {\n    O = texelFetch(iChannel0, ivec2(U), 0);\n}\n*/",
        "name": "Image",
        "description": "",
        "type": "image"
      },
      {
        "inputs": [
          {
            "id": 257,
            "src": "/media/previz/buffer00.png",
            "ctype": "buffer",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          },
          {
            "id": 11200,
            "src": "https://soundcloud.com/user-393003647/lenna",
            "ctype": "musicstream",
            "channel": 1,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 0
          }
        ],
        "outputs": [
          {
            "id": 257,
            "channel": 0
          }
        ],
        "code": "// License: Do What The F**k You Want To But It's Not My Fault Public License v1 (WTFNMFPL-1.0)\n// Created by Osipov Kirill --- zabidon, KirillD503\n\n#define mainImage(O, U) vec2 u = U / iResolution.xy; O = texture(iChannel0, u); float f = mod(iChannelTime[1] / 11.92, 3.), o = texture(iChannel1, vec2(u.y, 0.)).x; abs(fract(f) - u.x) < 3e-3 ? f < 1. ? O.r = o : f < 2. ? O.g = o : O.b = o : o;\n\n/*\nvoid mainImage(out vec4 C, in vec2 U) {\n    C = texture(iChannel0, U /= iResolution.xy);\n    \n    // Using iTime is shorter than iChannelTime (-10 chars), but I think it is not fair.\n    float f = mod(iChannelTime[1] / 11.92, 3.),\n        o = texture(iChannel1, vec2(U.y, 0.)).x;\n    abs(fract(f) - U.x) < 3e-3 ?\n        f < 1. ?\n            C.r = o :\n            f < 2. ?\n                C.g = o :\n                C.b = o :\n        o;\n}\n*/",
        "name": "Buf A",
        "description": "",
        "type": "buffer"
      }
    ]
  }
}