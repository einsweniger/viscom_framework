{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "lscyD7",
      "date": "1519145359",
      "viewed": 378,
      "name": "Cheap 5D Wave Noise",
      "username": "afl_ext",
      "description": "Very cheap, very high quality, very like life appearance,  can be easily modded into lower and higher dimensions. Best use is water height (can be seen in my other shaders).",
      "likes": 30,
      "published": 3,
      "flags": 0,
      "tags": [
        "noise",
        "wave",
        "5d"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "\n/*\n5D wave noise\nafl_ext 2018\npublic domain\n*/\n\nfloat hash(float p){\n    return fract(4768.1232345456 * sin(p));\n}\n\n#define EULER 2.7182818284590452353602874\nfloat wave(vec4 uv, vec4 emitter, float speed, float phase, float timeshift){\n    float dst = distance(uv, emitter);\n    return pow(EULER, sin(dst * phase - timeshift * speed)) / EULER;\n}\nvec4 wavedrag(vec4 uv, vec4 emitter){\n    return normalize(uv - emitter);\n}\nfloat seedWaves = 0.0;\nvec4 randWaves(){\n    float x = hash(seedWaves);\n    seedWaves += 1.0;\n    float y = hash(seedWaves);\n    seedWaves += 1.0;\n    float z = hash(seedWaves);\n    seedWaves += 1.0;\n    float w = hash(seedWaves);\n    seedWaves += 1.0;\n    return vec4(x,y,z,w) * 2.0 - 1.0;\n}\n\nfloat getwaves5d(vec4 position, float dragmult, float timeshift){\n    float iter = 0.0;\n    float phase = 6.0;\n    float speed = 2.0;\n    float weight = 1.0;\n    float w = 0.0;\n    float ws = 0.0;\n    for(int i=0;i<20;i++){\n        vec4 p = randWaves() * 30.0;\n        float res = wave(position, p, speed, phase, 0.0 + timeshift);\n        float res2 = wave(position, p, speed, phase, 0.006 + timeshift);\n        position -= wavedrag(position, p) * (res - res2) * weight * dragmult;\n        w += res * weight;\n        iter += 12.0;\n        ws += weight;\n        weight = mix(weight, 0.0, 0.2);\n        phase *= 1.2;\n        speed *= 1.02;\n    }\n    return w / ws;\n}\n\n// helper function\n\nvec3 polarToXyz(vec2 xy){\n    xy *= vec2(2.0 *3.1415,  3.1415);\n    float z = cos(xy.y);\n    float x = cos(xy.x)*sin(xy.y);\n    float y= sin(xy.x)*sin(xy.y);\n    return normalize(vec3(x,y,z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec2 mouse = iMouse.xy / iResolution.xy;\n    vec3 col = vec3(1.0) * getwaves5d(vec4(polarToXyz(uv), (mouse.x * 2.0 - 1.0) * 10.0), 10.0 + mouse.y * 10.0, iTime);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}