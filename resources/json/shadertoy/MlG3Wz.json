{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "MlG3Wz",
      "date": "1474125186",
      "viewed": 457,
      "name": "Slices webcam",
      "username": "stanvanoers",
      "description": "fork",
      "likes": 4,
      "published": 3,
      "flags": 2,
      "tags": [
        "slicesnoisewebcam"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 28,
            "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png",
            "ctype": "texture",
            "channel": 0,
            "sampler": {
              "filter": "nearest",
              "wrap": "repeat",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          },
          {
            "id": 31,
            "src": "/presets/webcam.png",
            "ctype": "webcam",
            "channel": 1,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pixel = fragCoord.xy / iResolution.xy;\n    vec2 adjustedPixel = pixel;\n    const float intensity = .1;\n    \n    adjustedPixel.y = 0.0;\n    adjustedPixel.x = pixel.y;\n\n    vec4 noiseTexture = texture( iChannel0,adjustedPixel);\n    vec4 soundTexture = texture( iChannel2,adjustedPixel);\n    \n    pixel.x += sin(noiseTexture.x * iTime) * intensity - .05;\n    vec3 videoTexture = texture(iChannel1, pixel).xyz;\n    videoTexture.r -= 1.0 - ((sin(iTime * noiseTexture.y) + 1.0) / 2.);\n\n\tvideoTexture.g = .2;\n\tvideoTexture.b = .2;\n    \n\tfragColor = vec4(videoTexture, 1.0);\n}",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}