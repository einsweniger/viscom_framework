{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "lstczB",
      "date": "1519459841",
      "viewed": 19,
      "name": "domain distortion test",
      "username": "dtoadq",
      "description": "test",
      "likes": 0,
      "published": 3,
      "flags": 0,
      "tags": [
        "test"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "#define float4 vec4\n#define float3 vec3\n#define float2 vec2\n\nfloat noise ( in float2 uv ) {\n  return (sin(2.5*uv.x) + sin(2.5*uv.y));\n}\n\nfloat fbm ( in float2 uv ) {\n  const mat2 m = mat2(0.8, 0.6, -0.6, 0.8);\n  float f = 0.0;\n  f += 0.5000*noise(uv); uv = m*uv*2.02;\n  f += 0.2500*noise(uv); uv = m*uv*2.03;\n  f += 0.1250*noise(uv); uv = m*uv*2.01;\n  f += 0.0625*noise(uv);\n  return f/0.9375;\n}\n\nfloat pattern ( in float2 uv ) {\n  float2 q = float2(fbm(uv + float2(0.0, iTime)),\n                    fbm(uv + float2(4.2, iTime)));\n  float2 r = float2(fbm(uv + 4.0*q + float2(1.6, iTime*0.2)),\n                    fbm(uv + 4.0*q + float2(iTime*0.3, iTime)));\n  return fbm(uv+q-r*0.25);\n}\n\nvoid mainImage(out vec4 frag_colour, in vec2 frag_coord) {\n\tvec2 uv = frag_coord / iResolution.xy;\n  uv = (uv*2.0) - 1.0;\n  uv.x *= iResolution.x/iResolution.y;\n\n\tfrag_colour = float4(1.0);\n  frag_colour.xyz = vec3(0.3, 0.6, 0.8) * pattern(uv) +\n                    vec3(0.8, 0.2, 0.5) * fbm(0.2*uv+vec2(cos(iTime), iTime*2.0))*0.5;\n}",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}