{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "XsyyRy",
      "date": "1522355257",
      "viewed": 134,
      "name": "Mandlebrot Set",
      "username": "Jamie_Pendergast",
      "description": "Cursor to the corner for a secret location!",
      "likes": 1,
      "published": 3,
      "flags": 0,
      "tags": [
        "mandlebrot"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "#define iterations 2000\nprecision highp float;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = 3.;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 m = iMouse.xy / iResolution.xy;\n    \n    \n    if(length(m) < .5) {\n        zoom = length(m * m);\n     \tm = vec2(-0.7272,0.24) / zoom;   \n    }\n    else {\n        m -= 0.5;\n    }\n    \n    vec2 uv = (fragCoord)/ (iResolution.x);\n    uv -= 0.33;\n    uv *= zoom;\n    uv += m * zoom;\n    \n    \n\n\tfloat r = uv.x;\n    float i = uv.y;\n    \n   \t\n   \n    \n    for(int iteration = 0; iteration < iterations; iteration++) {         \n        float r2 = r * r;\n    \tfloat i2 = i * i;\n        \n        if((r2 + i2) >= 4.) {\n            float l = float(iteration) / float(iterations);\n        \tfloat loga = log(l);\n            float loga2 = log2(l);\n\t\t\n            \n            fragColor = vec4(cos(loga2),cos(loga2),sin(loga2),1.);\n            break;\n        }\n        \n        float ri = r * i;\n        r = r2 - i2 + uv.x;\n        i = ri + ri + uv.y;\n       \n       \n        fragColor = vec4(1.);\n       \n    }\n    \n}",
        "name": "Image",
        "description": "",
        "type": "image"
      }
    ]
  }
}