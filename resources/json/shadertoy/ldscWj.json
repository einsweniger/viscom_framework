{
  "Shader": {
    "ver": "0.1",
    "info": {
      "id": "ldscWj",
      "date": "1489990359",
      "viewed": 238,
      "name": "Framebuffer Study",
      "username": "lherm",
      "description": "An idea I had that I wanted to try out.",
      "likes": 1,
      "published": 3,
      "flags": 32,
      "tags": [
        "raymarch",
        "framebuffer"
      ],
      "hasliked": 0
    },
    "renderpass": [
      {
        "inputs": [
          {
            "id": 257,
            "src": "/media/previz/buffer00.png",
            "ctype": "buffer",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 37,
            "channel": 0
          }
        ],
        "code": "void mainImage( out vec4 f, in vec2 w )\n{\n    f=texture(iChannel0, w/iResolution.xy);\n}",
        "name": "Image",
        "description": "",
        "type": "image"
      },
      {
        "inputs": [
          {
            "id": 257,
            "src": "/media/previz/buffer00.png",
            "ctype": "buffer",
            "channel": 0,
            "sampler": {
              "filter": "linear",
              "wrap": "clamp",
              "vflip": "true",
              "srgb": "false",
              "internal": "byte"
            },
            "published": 1
          }
        ],
        "outputs": [
          {
            "id": 257,
            "channel": 0
          }
        ],
        "code": "void mainImage( out vec4 f, in vec2 w )\n{\n    // t - total ray distance\n    // x - the distance function\n    // o - the distance between each point and 0\n    float T=iTime, t=0., x, o;\n\tvec2 R = iResolution.xy, u = vec2((2.*w-R)/R.y);\n    vec3 r = vec3(u, 1), d=normalize(vec3(u,-1)), p, l=r-r, c; // Basic ray march set up\n    for (float i = 1.; i > 0.; i -= 0.01)\n    {\n        \n        p = r + d * t;\n        //p.xy += sin(p.z + T)*.4;\n        p.z -= iTime;\n        x = length(mod(p*.5, 2.)-1.)-.5; // Distance function\n        t += x;\n        if (x < 0.005 || t > 30.) break;\n        o = distance(p, vec3(0.));\n        c = sin(vec3(o, 1.-o, 1./o) + t);\n        c += l = texture(iChannel0, w/R-.01).rgb*.5; // l - The framebuffer\n    }\n    f.rgb=c;\n}",
        "name": "Buf A",
        "description": "",
        "type": "buffer"
      }
    ]
  }
}